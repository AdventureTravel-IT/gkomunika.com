{% style %}
.invalid-popup {
  display: none;
  position: fixed;
  z-index: 9999;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.5);
}

.invalid-popup__content {
  background-color: var(--color-neutral);
  padding: 30px;
  max-width: 450px;
  width: 100%;
  border-radius: 10px;
  text-align: center;
  color: var(--color-primary);
  font-size: var(--font-extra-large);
  margin: 50px auto;
}

.invalid-popup__content h2 {
  font-size: 34px;
  font-weight: bold;
  line-height: 1.5;
  margin: 10px 0;
}

.invalid-popup__button {
  display: flex;
  gap: 15px;
}

.invalid-popup__button button,
#invalid-popup__button-hide {
  width: 100%;
  padding: 15px;
  border-radius: 10px;
  border: none;
  cursor: pointer;
  font-size: var(--font-large);
}

#invalid-popup__buy-button {
  background-color: var(--color-secondary);
  color: var(--color-neutral);
}

#invalid-popup__contact-button {
  background-color: #25D366;
  color: var(--color-neutral);
}

#invalid-popup__button-hide {
  margin-top: 15px;
  background-color: var(--color-primary);
  color: var(--color-neutral);
}

#iccid {
  padding: 15px;
  border-radius: 15px;
  width: 100%;
  border: 1px solid var(--color-primary);
  background-color: var(--color-neutral);
  color: var(--color-primary);
  font-size: var(--font-large);
}

#iccid:focus {
  outline: none;
}

#check-iccid {
  padding: 15px;
  border-radius: 15px;
  width: 100%;
  border: 1px solid var(--color-primary);
  background-color: var(--color-primary);
  color: var(--color-neutral);
  font-size: var(--font-large);
  font-weight: bold;
  margin-top: 20px;
  cursor: pointer;
}

.check-data-usage__container {
  margin: 0 auto;
  max-width: 1920px;
}

.check-data-usage__wrapper {
  padding: 20px 20%;
}

.check-data-usage__esim-information,
.check-data-usage__usage-content {
  background-color: var(--color-neutral);
  border-radius: 15px;
  padding: 15px;
  color: var(--color-primary);
  margin-top: 20px;
  font-size: var(--font-large);
}

.check-data-usage__esim-information {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  text-align: center;
}

.check-data-usage__esim-information h3,
.check-data-usage__usage-content h2,
.check-data-usage__usage-content h3 {
  color: var(--color-primary);
  font-weight: bold;
  margin: 10px 0;
  line-height: 1.3;
}

.esim-information__wrapper p {
  margin: 0;
  line-height: 1.3;
}

.esim-information__wrapper span {
  font-weight: bold;
}

.data-usage__wrapper {
  display: flex;
  justify-content: space-between;
}

.data-usage__wrapper p {
  margin: 0;
  width: 150px;
}

.data-usage__wrapper p:nth-child(3) {
  justify-content: flex-end;
}

.data-usage__wrapper p:nth-child(2) {
  justify-content: center;
}

.check-data-usage__total-usage {
  border-bottom: 3px solid var(--color-border);
  margin-bottom: 20px;
  padding-bottom: 20px;
}

.total-data-usage__wrapper {
  padding: 15px;
  border-radius: 15px;
  border: 1px solid var(--color-border);
  display: flex;
  width: 30%;
  justify-content: space-between;
}

.total-data-usage__wrapper p {
  margin: 0;
}

.check-data-usage__header p {
  font-size: 24px;
  font-weight: bold;
  color: var(--color-primary);
  margin: 0;
}

.check-data-usage__header span {
  font-size: var(--font-large);
  color: var(--color-primary);
}
.data-usage__wrapper p:nth-child(3) {
  display: flex;
  justify-content: flex-end;
}
input[type=number]::-webkit-outer-spin-button,
input[type=number]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}
/* Firefox */
input[type=number] {
    -moz-appearance: textfield;
}
@media (max-width: 768px) {
  .check-data-usage__wrapper {
    padding: 20px 24px;
  }
  .total-data-usage__wrapper {
    width: 100%;
  }
}
{% endstyle %}
<div class="check-data-usage__container">
  <div class="check-data-usage__wrapper">
    <div class="check-data-usage__header">
      <p>Check Data Usage</p>
      <span>Enter your ICCID</span>
    </div>
    <div class="check-data-usage__input">
      <input
        type="number"
        id="iccid"
        placeholder="Input ICCID Number"
        value="22104483970"
        required
      >
      <button id="check-iccid" type="button">Next</button>
    </div>
    <div class="check-data-usage__result">
      <div id="result"></div>
    </div>
  </div>
</div>

<div class="invalid-popup" id="invalid-popup">
  <div class="invalid-popup__content">
    <h2>ICCID Invalid</h2>
    <p>Sorry, currently your sim card does not support top up via the website. You can top up by contacting our CS via Whatsapp.</p>
    <p>If your device supports eSIM. You can buy an eSIM for your travel connectivity.</p>
    <div class="invalid-popup__button">
      <button id="invalid-popup__buy-button"><span>Buy eSIM</span></button>
      <button id="invalid-popup__contact-button"><span>Contact CS</span></button>
    </div>
    <button id="invalid-popup__button-hide"><span>OK</span></button>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const iccidInput = document.getElementById('iccid');
  const checkBtn = document.getElementById('check-iccid');
  const resultEl = document.getElementById('result');
  const invalidPopup = document.getElementById('invalid-popup');
  const btnHidePopup = document.getElementById('invalid-popup__button-hide');
  const btnBuyEsim = document.getElementById('invalid-popup__buy-button');
  const btnContactCs = document.getElementById('invalid-popup__contact-button');

  let lastSubmit = 0;

  const prefixVendorMap = [
    { prefix: '89859', vendor: 'F' },
    { prefix: '89862', vendor: 'F' },
    { prefix: '89810', vendor: 'T' },
    { prefix: '2210', vendor: 'B' },
    { prefix: '8981200', vendor: 'B' },
  ];

  function detectVendor(iccid) {
    return prefixVendorMap.find(item => iccid.startsWith(item.prefix))?.vendor || null;
  }

  function showInvalidPopup() {
    invalidPopup.style.display = 'block';
  }

  function hideInvalidPopup() {
    invalidPopup.style.display = 'none';
  }

  function formatBytes(bytes) {
    if (bytes >= 1024 * 1024) {
      return (bytes / (1024 * 1024)).toFixed(2) + ' GB';
    } else if (bytes >= 1024) {
      return (bytes / 1024).toFixed(2) + ' MB';
    } else {
      return bytes + ' Byte';
    }
  }

  function formatDate(dateStr) {
    if (!dateStr || dateStr.length !== 8) return dateStr || '-';
    const year = dateStr.slice(0, 4);
    const month = dateStr.slice(4, 6);
    const day = dateStr.slice(6, 8);
    return `${day}/${month}/${year}`;
  }

  function formatDateTime(dateTimeStr) {
    if (!dateTimeStr) return '-';
    const parts = dateTimeStr.split(' ')[0];
    const [year, month, day] = parts.split('-') || [];
    return year && month && day ? `${day}/${month}/${year}` : dateTimeStr;
  }

  function renderEsimInfo(itemData) {
    return `
      <div class="check-data-usage__esim-information">
        <h3>SIM Card Information</h3>
        <div class="esim-information__wrapper">
          <p>Your Bundle</p>
          <span>${itemData.skuName || '-'}</span>
        </div>
        <div class="esim-information__wrapper">
          <p>Active Date</p>
          <span>${formatDateTime(itemData.planStartTime)} ${itemData.timeZone || '-'}</span>
        </div>
        <div class="esim-information__wrapper">
          <p>End Date</p>
          <span>${formatDateTime(itemData.planEndTime)} ${itemData.timeZone || '-'}</span>
        </div>
      </div>
    `;
  }

  function renderTotalUsage(countryUsageMap) {
    if (Object.keys(countryUsageMap).length === 0) {
      return '<div>no data usage yet.</div>';
    }
    return Object.entries(countryUsageMap)
      .map(([country, totalBytes]) => `
        <div class="total-data-usage__wrapper">
          <p>${country}</p>
          <p>${formatBytes(totalBytes)}</p>
        </div>
      `)
      .join('');
  }

  function renderDataUsage(dataUsage) {
    if (!dataUsage?.length) {
      return '<p>no data usage yet.</p>';
    }
    return dataUsage.map(item => `
      <div class="data-usage__wrapper">
        <p>${item.country || '-'}</p>
        <p>${formatDate(item.usedDate) || '-'}</p>
        <p>${formatBytes(Number(item.usedAmount) || 0)}</p>
      </div>
    `).join('');
  }

  async function checkICCID() {
    const now = Date.now();
    if (now - lastSubmit < 3000) return;
    lastSubmit = now;

    const iccid = iccidInput.value.trim();
    if (!iccid || iccid.length < 10) {
      resultEl.innerHTML = `<p style="color:red;">Invalid ICCID (minimum 10 digits)</p>`;
      return;
    }

    const vendor = detectVendor(iccid);
    if (!vendor) {
      showInvalidPopup();
      return;
    }

    checkBtn.disabled = true;
    checkBtn.textContent = 'Loading...';

    try {
      const response = await fetch('https://gkomunika.id/api/v1/check/data_info', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({ iccid })
      });

      const contentType = response.headers.get('Content-Type') || '';
      const data = contentType.includes('application/json') ? await response.json() : {};

      if (data.status === 'rate_limited' || data.customCode === 429) {
        console.log(data.message);
        return;
      }

      const itemData = data?.tradeData?.subOrderList?.[0];
      const dataUsage = itemData?.usageInfoList || [];

      if (data.tradeCode !== '1000' || !itemData) {
        showInvalidPopup();
        return;
      }

      const countryUsageMap = {};
let totalUsedBytes = 0;

for (const item of dataUsage) {
  const country = item.country || '-';
  const usedAmount = Number(item.usedAmount) || 0;
  countryUsageMap[country] = (countryUsageMap[country] || 0) + usedAmount;

  totalUsedBytes += usedAmount;
}


      const esimHtml = renderEsimInfo(itemData);
      const totalUsageHtml = renderTotalUsage(countryUsageMap);
      const dataUsageHtml = renderDataUsage(dataUsage);

      resultEl.innerHTML = `
        ${esimHtml}
        <div class="check-data-usage__usage-content">
        <div style="text-align: center;">
          <h2>Data Usage</h2>
          </div>
          <div class="check-data-usage__total-usage">
          <div style="display: flex; justify-content: space-between;">
            <h3>Total Usage:</h3>
            <span style="font-weight: bold;">${formatBytes(totalUsedBytes)}</span>
            </div>
            ${totalUsageHtml}
          </div>
          <div class="check-data-usage__data-usage">
            ${dataUsageHtml}
          </div>
        </div>
      `;

    } catch (e) {
      resultEl.innerHTML = `<p style="color:red;">Connection error.</p>`;
    } finally {
      checkBtn.disabled = false;
      checkBtn.textContent = 'Next';
    }
  }

  checkBtn.addEventListener('click', checkICCID);
  btnHidePopup.addEventListener('click', hideInvalidPopup);
  btnBuyEsim.addEventListener('click', () => {
    window.location.href = 'https://gkomunika.com/pages/all-destination';
  });
  btnContactCs.addEventListener('click', () => {
    window.location.href = 'https://wa.me/628986454071';
  });
});
</script>


{% schema %}
{
  "name": "Check Data Usage",
  "settings": [],
  "presets": [
    {
      "name": "Check Data Usage",
      "category": "Custom"
    }
  ]
}
{% endschema %}
