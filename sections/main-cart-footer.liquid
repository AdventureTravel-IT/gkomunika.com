{% style %}
  .form-insurance__container {
    max-width: 1920px;
    margin: 0 auto;
  }
  .form-insurance__content-wrapper {
    padding: 20px 20%;
  }
  .form-insurance {
    display: flex;
    gap: 10px;
  }
  .form-index {
    background-color: var(--color-primary);
    padding: 10px 15px;
    display: flex;
    justify-content: space-between;
  }
  .form-insurance__form {
    padding: 15px;
    border-radius: 0 0 15px 15px;
    background-color: var(--color-neutral);
    margin-bottom: 20px;
  }

  .form-index {
    color: var(--color-neutral);
    border-radius: 15px 15px 0 0;
  }

  .form-insurance__checkout {
    width: 100%;
    background-color: var(--color-neutral);
    padding: 15px;
    position: relative;
    border-radius: 15px;
    color: var(--color-primary);
  }
  .form-insurance__checkout-button,
  .insurance-form__add-form {
    border-radius: 15px;
    padding: 10px 15px;
    color: var(--color-neutral);
    font-size: var(--font-large);
    outline: none;
    border: none;
    width: 130px;
    margin-bottom: 15px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  .form-insurance__checkout-button {
    background-color: var(--color-primary);
  }
  .insurance-form__add-form {
    background-color: var(--color-secondary);
  }
  .form-insurance__checkout-button:hover {
    transform: translateY(2px);
    box-shadow: var(--box-shadow);
  }
  .form-insurance__right {
    width: 80%;
    display: flex;
    flex-direction: column;
    gap: 5px;
  }
  .form-insurance__wrapper {
    display: flex;
    gap: 15px;
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
    flex-wrap: wrap;
  }
  .form-insurance__field label,
  .form-insurance__wrapper label {
    color: var(--color-primary);
    font-size: 16px;
  }

  .form-insurance__field select,
  .form-insurance__wrapper input {
    border-radius: 10px;
    outline: none;
    border: 1px solid var(--color-border);
    background-color: var(--color-background);
    padding: 10px;
    color: var(--color-primary);
  }
  .form-insurance__wrapper input::placeholder {
    color: var(--color-primary);
    letter-spacing: 0.5px;
    font-size: 14px;
  }
  .form-insurance__field {
    display: flex;
    flex-direction: column;
    flex: 1;
    max-width: 100%;
  }
  .form-insurance__wrapper-item {
    display: flex;
    flex: 1;
    gap: 10px;
  }
  .form-insurance__wrapper-item .form-insurance__field {
    flex: 1;
  }
  .form-insurance__field input,
  .form-insurance__field select,
  .form-insurance__field textarea {
    width: 100%;
    box-sizing: border-box;
  }
  .form-insurance__field textarea {
    color: var(--color-primary);
    min-height: 100px;
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
    outline: none;
    border: 1px solid var(--color-border);
  }
  .form-insurance__field textarea::placeholder {
    color: var(--color-primary);
    font-size: 14px;
  }
  #add-form-button,
  #checkout-button {
    margin-left: auto;
    margin-top: 10px;
  }
{% endstyle %}

{% style %}
  .add-traveler__button {
    display: flex;
    justify-content: flex-end;
  }
  .form-insurance__label-wrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
{% endstyle %}

{{ 'component-cart.css' | asset_url | stylesheet_tag }}
{{ 'component-totals.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-discounts.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div
  class="gradient color-{{ section.settings.color_scheme }}{% if cart == empty %} is-empty{% endif %}"
  id="main-cart-footer"
  data-id="{{ section.id }}"
>
  <div class="page-width">
    <div class="cart__footer isolate section-{{ section.id }}-padding">
      {%- if settings.show_cart_note -%}
        <cart-note class="cart__note field">
          <label for="Cart-note">{{ 'sections.cart.note' | t }}</label>
          <textarea
            class="text-area field__input"
            name="note"
            form="cart"
            id="Cart-note"
            placeholder="{{ 'sections.cart.note' | t }}"
          >{{ cart.note }}</textarea>
        </cart-note>
      {%- endif -%}

      <div class="cart__blocks">
        {% for block in section.blocks %}
          {%- case block.type -%}
            {%- when '@app' -%}
              {% render block %}
            {%- when 'subtotal' -%}
              <div class="js-contents" {{ block.shopify_attributes }}>
                <div>
                  {%- if cart.cart_level_discount_applications.size > 0 -%}
                    <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
                      {%- for discount in cart.cart_level_discount_applications -%}
                        <li class="discounts__discount discounts__discount--position">
                          {{- 'icon-discount.svg' | inline_asset_content -}}
                          {{ discount.title | escape }}
                          (-{{ discount.total_allocated_amount | money }})
                        </li>
                      {%- endfor -%}
                    </ul>
                  {%- endif -%}
                </div>

                <div class="totals">
                  <h2 class="totals__total">{{ 'sections.cart.estimated_total' | t }}</h2>
                  <p class="totals__total-value">{{ cart.total_price | money_with_currency }}</p>
                </div>

                <small class="tax-note caption-large rte">
                  {%- if cart.duties_included and cart.taxes_included -%}
                    {%- if shop.shipping_policy.body == blank -%}
                      {{ 'sections.cart.duties_and_taxes_included_shipping_at_checkout_without_policy' | t }}
                    {%- else -%}
                      {{
                        'sections.cart.duties_and_taxes_included_shipping_at_checkout_with_policy_html'
                        | t: link: shop.shipping_policy.url
                      }}
                    {%- endif -%}
                  {%- elsif cart.duties_included == false and cart.taxes_included -%}
                    {%- if shop.shipping_policy.body == blank -%}
                      {{ 'sections.cart.taxes_included_shipping_at_checkout_without_policy' | t }}
                    {%- else -%}
                      {{
                        'sections.cart.taxes_included_shipping_at_checkout_with_policy_html'
                        | t: link: shop.shipping_policy.url
                      }}
                    {%- endif -%}
                  {%- elsif cart.duties_included and cart.taxes_included == false -%}
                    {%- if shop.shipping_policy.body == blank -%}
                      {{ 'sections.cart.duties_included_taxes_at_checkout_shipping_at_checkout_without_policy' | t }}
                    {%- else -%}
                      {{
                        'sections.cart.duties_included_taxes_at_checkout_shipping_at_checkout_with_policy_html'
                        | t: link: shop.shipping_policy.url
                      }}
                    {%- endif -%}
                  {%- elsif cart.duties_included == false and cart.taxes_included == false -%}
                    {%- if shop.shipping_policy.body == blank -%}
                      {{ 'sections.cart.taxes_at_checkout_shipping_at_checkout_without_policy' | t }}
                    {%- else -%}
                      {{
                        'sections.cart.taxes_at_checkout_shipping_at_checkout_with_policy_html'
                        | t: link: shop.shipping_policy.url
                      }}
                    {%- endif -%}
                  {%- endif -%}
                </small>
              </div>
            {%- else -%}
              <div class="cart__ctas" {{ block.shopify_attributes }}>
  {% assign hasInsuranceProduct = false %}
  
  {% for item in cart.items %}
    {% if item.product.metafields.product.category == 'Insurance' %}
      {% assign hasInsuranceProduct = true %}
    {% endif %}
  {% endfor %}

  {% if hasInsuranceProduct %}
    <!-- Display the "Insurance Checkout" button -->
    <button
      type="button"
      id="insurance-checkout-button"
      class="cart__checkout-button button"
      {% if cart == empty %}
        disabled
      {% endif %}
      form="cart"
    >
      {{ 'sections.cart.checkout' | t }}
    </button>
  {% else %}
    <!-- Display the regular "Checkout" button -->
    <button
      type="submit"
      id="checkout"
      class="cart__checkout-button button"
      name="checkout"
      {% if cart == empty %}
        disabled
      {% endif %}
      form="cart"
    >
      {{ 'sections.cart.checkout' | t }}
    </button>
  {% endif %}
                {% comment %}
                  {% for item in cart.items %}
                    <div class="debug-product">
                      <p>Product Title: {{ item.product.title }}</p>
                      <p>Product Category: {{ item.product.metafields.product.category }}</p>
                      <p>Variant Type: {{ item.variant.metafields.variant.type }}</p>
                      <p>Variant Title: {{ item.variant.title }}</p>
                      <p>Variant ID: {{ item.variant.id }}</p>
                      <p>Quantity: {{ item.quantity }}</p>
                      <p>Variant Coverage:
                        {% if item.variant.metafields.variant.coverage != blank %}
                          {{ item.variant.metafields.variant.coverage | join: ', ' }}
                        {% else %}
                          -
                        {% endif %}
                      </p>
                    </div>
                  {% endfor %}
                {% endcomment %}
              </div>

              {%- if additional_checkout_buttons -%}
                <div class="cart__dynamic-checkout-buttons additional-checkout-buttons">
                  {{ content_for_additional_checkout_buttons }}
                </div>
              {%- endif -%}
          {%- endcase -%}
        {% endfor %}

        <div id="cart-errors"></div>
      </div>
    </div>
  </div>
</div>

<script>
  document.getElementById('insurance-checkout-button')?.addEventListener('click', function () {
    // Clear sessionStorage data if it exists
    sessionStorage.removeItem('ProductItems'); // or sessionStorage.clear(); to remove all session storage data

    const ProductItems = [];

    {% for item in cart.items %}
      ProductItems.push({
        productTitle: {{ item.product.title | json }},
        category: {{ item.product.metafields.product.category.value | json }},
        variantType: {{ item.variant.metafields.variant.type | json }},
        variantTitle: {{ item.variant.title | json }},
        variantId: {{ item.variant.id }},
        quantity: {{ item.quantity }},
        variantCoverage: {{ item.variant.metafields.variant.coverage.value | json }}
      });
    {% endfor %}

    if (ProductItems.length === 0) {
      alert('Cart is empty.');
      return;
    }

    // Save all items in sessionStorage
    sessionStorage.setItem('ProductItems', JSON.stringify(ProductItems));

    // Debug
    console.log("Stored ProductItems:", ProductItems);

    // Redirect to form-insurance
    window.location.href = '/pages/form-insurance';
  });
</script>

{% schema %}
{
  "name": "t:sections.main-cart-footer.name",
  "class": "cart__footer-wrapper",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 40
    }
  ],
  "blocks": [
    {
      "type": "subtotal",
      "name": "t:sections.main-cart-footer.blocks.subtotal.name",
      "limit": 1
    },
    {
      "type": "buttons",
      "name": "t:sections.main-cart-footer.blocks.buttons.name",
      "limit": 1
    },
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
