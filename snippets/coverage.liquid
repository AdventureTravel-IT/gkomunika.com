{% comment %} {% style %}
      .coverage {
        display: flex;
        flex-direction: column;
        gap: 5px;
      }
      .coverage li {
        display: flex;
        align-items: center;
        gap: 10px;
      }
      .coverage h3 {
        text-align: center;
        font-size: 20px;
        color: var(--color-primary);
        margin: 0;
      }
      .coverage img {
        border-radius: 15px;
        border: 1px solid var(--color-border);
      }
    {% endstyle %}

    <div id="coverage-container" class="coverage">
      {% assign countries_1 = product.metafields.coverage.country.value %}
      {% assign countries_2 = product.metafields.coverage.country_2.value %}
      {% assign countries_all = countries_1 | concat: countries_2 %}

      {% for country in countries_all %}
        {% assign formatted_country = country %}
        <div class="coverage-item" data-default-country="{{ country | downcase }}">
          <li>
            <img
              class="image-countries"
              src="{{ country | append: '.svg' | file_url }}"
              alt="{{ formatted_country }}"
              width="50"
              height="50"
              loading="lazy">
            <h3>{{ formatted_country }}</h3>
          </li>
        </div>
      {% endfor %}
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function () {
        const variantDropdowns = document.querySelectorAll('.variant-dropdown');
        const coverageContainer = document.getElementById('coverage-container');

        const variantsData = [
          {% for variant in product.variants %}
            {
              id: {{ variant.id }},
              options: [{% for option in variant.options %}"{{ option | escape }}" {% unless forloop.last %},{% endunless %}{% endfor %}],
              coverage: {{ variant.metafields.variant.coverage.value | json }}
            }{% unless forloop.last %},{% endunless %}
          {% endfor %}
        ];

        // Menggabungkan metafield product coverage dari 2 sumber
        const productCoverage = {{ product.metafields.coverage.country.value | concat: product.metafields.coverage.country_2.value | json }};

        const baseUrl = 'https://cdn.shopify.com/s/files/1/0735/4204/1817/files/';
        const version = '?v=1739352504'; // Sesuaikan jika berubah

        function renderCoverage(countries) {
          coverageContainer.innerHTML = '';

          if (Array.isArray(countries)) {
            countries.forEach(country => {
              const formatted = country.replace(/_/g, ' ');
              const imageUrl = `${baseUrl}${country}.svg${version}`;

              const el = document.createElement('div');
              el.className = 'coverage-item';
              el.setAttribute('data-default-country', country.toLowerCase());

              el.innerHTML = `
                <li>
                  <img
                    class="image-countries"
                    src="${imageUrl}"
                    alt="${formatted}"
                    width="50"
                    height="50"
                    loading="lazy">
                  <h3>${formatted}</h3>
                </li>
              `;

              coverageContainer.appendChild(el);
            });
          }
        }

        function updateMetafieldDisplay() {
          const selectedOptions = Array.from(variantDropdowns).map(dropdown => dropdown.value);

          const matchedVariant = variantsData.find(variant => {
            return variant.options.every((option, index) => option === selectedOptions[index]);
          });

          if (matchedVariant) {
            const coverage = matchedVariant.coverage;

            if (Array.isArray(coverage) && coverage.length > 0) {
              renderCoverage(coverage);
            } else {
              renderCoverage(productCoverage);
            }
          } else {
            renderCoverage(productCoverage);
          }
        }

        variantDropdowns.forEach(dropdown => {
          dropdown.addEventListener('change', updateMetafieldDisplay);
        });

        updateMetafieldDisplay(); // initial render
      });
</script> {% endcomment %}


{% assign countries_1 = product.metafields.coverage.country.value %}
{% assign countries_2 = product.metafields.coverage.country_2.value %}

{% if countries_1 == blank %}
  {% assign countries_1 = '' | split: ',' %}
{% endif %}
{% if countries_2 == blank %}
  {% assign countries_2 = '' | split: ',' %}
{% endif %}

{% assign countries_all = countries_1 | concat: countries_2 %}

{% style %}
  .coverage {
    display: flex;
    flex-direction: column;
    gap: 5px;
  }
  .coverage li {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  .coverage h3 {
    text-align: center;
    font-size: 20px;
    color: var(--color-primary);
    margin: 0;
  }
  .coverage img {
    border-radius: 15px;
    border: 1px solid var(--color-border);
  }
{% endstyle %}

<div id="coverage-container" class="coverage">
  {% for country in countries_all %}
    {% assign formatted_country = country %}
    <div class="coverage-item" data-default-country="{{ country | downcase }}">
      <li>
        <img
          class="image-countries"
          src="{{ country | append: '.svg' | file_url }}"
          alt="{{ formatted_country }}"
          width="50"
          height="50"
          loading="lazy">
        <h3>{{ formatted_country |  replace: '_',' '  }}</h3>
      </li>
    </div>
  {% endfor %}
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const variantDropdowns = document.querySelectorAll('.variant-dropdown');
    const coverageContainer = document.getElementById('coverage-container');

    const variantsData = [
      {% for variant in product.variants %}
        {
          id: {{ variant.id }},
          options: [{% for option in variant.options %}"{{ option | escape }}" {% unless forloop.last %},{% endunless %}{% endfor %}],
          coverage: {{ variant.metafields.variant.coverage.value | default: "[]" | json }}
        }{% unless forloop.last %},{% endunless %}
      {% endfor %}
    ];

    const baseUrl = 'https://cdn.shopify.com/s/files/1/0735/4204/1817/files/';
    const version = '?v=1739352504';

    const productCoverage = {{ countries_all | json }};

    function renderCoverage(countries) {
      coverageContainer.innerHTML = '';

      if (Array.isArray(countries)) {
        countries.forEach(country => {
          const formatted = country.replace(/_/g, ' ');
          const imageUrl = `${baseUrl}${country}.svg${version}`;

          const el = document.createElement('div');
          el.className = 'coverage-item';
          el.setAttribute('data-default-country', country.toLowerCase());

          el.innerHTML = `
            <li>
              <img
                class="image-countries"
                src="${imageUrl}"
                alt="${formatted}"
                width="50"
                height="50"
                loading="lazy">
              <h3>${formatted}</h3>
            </li>
          `;

          coverageContainer.appendChild(el);
        });
      }
    }

    function updateMetafieldDisplay() {
      const selectedOptions = Array.from(variantDropdowns).map(dropdown => dropdown.value);

      const matchedVariant = variantsData.find(variant => {
        return variant.options.every((option, index) => option === selectedOptions[index]);
      });

      if (matchedVariant) {
        const coverage = matchedVariant.coverage;

        if (Array.isArray(coverage) && coverage.length > 0) {
          renderCoverage(coverage);
        } else {
          renderCoverage(productCoverage);
        }
      } else {
        renderCoverage(productCoverage);
      }
    }

    variantDropdowns.forEach(dropdown => {
      dropdown.addEventListener('change', updateMetafieldDisplay);
    });

    updateMetafieldDisplay(); // initial render
  });
</script>